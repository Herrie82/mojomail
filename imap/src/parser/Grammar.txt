prefix

// @@@LICENSE
//
//      Copyright (c) 2009-2013 LG Electronics, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// LICENSE@@@

#include <list>
#include <map>
#include "parser/ImapParser.h"
#include "parser/ParserTypes.h"
#include "parser/SemanticActions.h"
using namespace std;

endprefix


parser ImapParser

;
; special token that we use to deal with embedded newlines in quoted strings for gmail's non-standard IMAP implementation
token QUOTED_STRING_WITHOUT_TERMINATION

;
; Compile this grammar using GrammarAnalyzer
;
;	This is the grammar we use
;
; *( ) means zero or more
; [ ]  means 0 or one
; / means alternative
;

production goal = message-data

production message-data    = nz-number {{ &SemanticActions::saveMsgNum }} SP km_expunge_or_fetch

production km_expunge_or_fetch = "EXPUNGE" / km_fetch

production km_fetch = 
					"FETCH" SP msg-att		{{ &SemanticActions::endFetch }}

production msg-att         = "(" km_msg_att_dynamic_or_static km-more-msg-att ")"

production km-more-msg-att = SP km_msg_att_dynamic_or_static km-more-msg-att
						/ epsilon

production km_msg_att_dynamic_or_static = msg-att-dynamic / msg-att-static

production msg-att-dynamic = "FLAGS" {{ &SemanticActions::beginFlags }} SP "(" km-flag-fetch-parts ")"

production km-flag-fetch-parts = 
		 			flag-fetch km-more-flag-fetch
				/	epsilon

production km-more-flag-fetch = SP flag-fetch km-more-flag-fetch
				/	epsilon
 
production msg-att-static  = 
					"ENVELOPE" SP envelope
				/	"INTERNALDATE" SP date-time
				/	"RFC822" SP nstring
				/	"RFC822.HEADER" SP nstring
				/	"RFC822.TEXT" SP nstring
				/	"RFC822.SIZE" SP NUMBER
				/	"BODYSTRUCTURE" SP {{ &SemanticActions::beginBodyStructure }} body {{ &SemanticActions::endBodyStructure }}
				/	"BODY" km-body-or-sect {{ &SemanticActions::handleBodyData }}
				/	"UID" SP uniqueid

production km-body-or-sect =
					SP body
				/	section km-section-number SP {{ &SemanticActions::expectBodyData }} nstring

production km-section-number = "<" NUMBER ">"
				/ epsilon
                  
production body            =
					"(" km-one-part-or-mpart ")"
					

production km-one-part-or-mpart = 
					body-type-1part
				/							{{ &SemanticActions::beginPartSet }}
						body-type-mpart
											{{ &SemanticActions::endPartSet }}
					

production body-type-1part = 
					km-body-type-choices

production km-body-ext-1part = SP body-ext-1part 
							/	epsilon

production km-body-type-choices =
					km-body-type-basic-or-workaround
				/	body-type-msg
				/	body-type-text

production body-type-basic = media-basic SP body-fields km-body-ext-1part
                    ; MESSAGE subtype MUST NOT be "RFC822"
                    
production km-body-type-basic-or-workaround =
					quoted-string  {{ &SemanticActions::setMimeType }} 
					SP
					km-body-type-or-ext-mpart
					
production km-body-type-or-ext-mpart =
					km-body-type
					/
					body-ext-mpart {{ &SemanticActions::zeroPartWorkaround }}
					
production km-body-type =
					quoted-string  {{ &SemanticActions::setMimeSubtype }}
					SP body-fields km-body-ext-1part

production body-fields     = 
					body-fld-param
						SP
						body-fld-id
						SP
						body-fld-desc
						SP
                  		body-fld-enc
                  		SP
                  		body-fld-octets

production body-fld-dsp    =  
					"(" string 					{{ &SemanticActions::setPartDisposition }}
						SP body-fld-param ")"
				/	nil

production body-ext-1part  = body-fld-md5 km-body-fld-after-md5

production body-ext-mpart  = body-fld-param km-opt-body-fld-dsp

production km-opt-body-fld-dsp = 
					SP body-fld-dsp km-opt-body-fld-lang
				/	epsilon
                    ; MUST NOT be returned on non-extensible
                    ; "BODY" fetch
production km-opt-body-fld-lang =
					SP body-fld-lang km-opt-body-fld-loc 
				/	epsilon
				
production km-opt-body-fld-loc =
					SP body-fld-loc km-opt-body-extension
				/	epsilon

production km-opt-body-extension =
					SP body-extension km-opt-body-extension
				/	epsilon

production km-body-fld-after-md5 = 
					SP body-fld-dsp km-body-fld-after-dsp
				/	epsilon

production km-body-fld-after-dsp =
					SP body-fld-lang km-body-fld-after-lang
				/	epsilon

production km-body-fld-after-lang =
                  	SP body-fld-loc km-more-body-extension
				/	epsilon


production body-extension  = 
					nstring
				/	NUMBER
				/	"(" body-extension km-more-body-extension ")"
				/	epsilon
				
                    ; Future expansion. Client implementations
                    ; MUST accept body-extension fields. Server
                    ; implementations MUST NOT generate
                    ; body-extension fields except as defined by
                    ; future standard or standards-track
                    ; revisions of this specification.

production km-more-body-extension = SP body-extension km-more-body-extension
							/ epsilon
							

production body-fld-desc   = nstring

production nstring = 
					string
				/	nil	 {{ &SemanticActions::saveNullString }}

production nil = "NIL"

production quoted-string =
					QUOTED-STRING {{ &SemanticActions::saveQuotedString }}

production string =
					QUOTED-STRING		{{ &SemanticActions::saveQuotedString }}
				/	TEXT-IN-QUOTES		{{ &SemanticActions::saveQuotedString }}
				/	RFC822-IN-QUOTES	{{ &SemanticActions::saveQuotedString }}
				/	MESSAGE-IN-QUOTES	{{ &SemanticActions::saveQuotedString }}
				/	literal {{ &SemanticActions::saveLiteralString }}


production literal =
					"{" NUMBER {{ &SemanticActions::readAheadLiteral }} "}" CR LF
					LITERAL_BYTES {{ &SemanticActions::endLiteralBytes }}

production nz-number = NUMBER {{ &SemanticActions::saveNonZeroNumber }}

production uniqueid = NUMBER  {{ &SemanticActions::saveUID }}

production date-time = QUOTED-STRING {{ &SemanticActions::saveInternalDate }}

production flag  = 
					flag-keyword
				/	flag-extension
				
					; "\Answered" / "\Flagged" / "\Deleted" /
	                ; "\Seen" / "\Draft" / flag-keyword / flag-extension
                    ; Does not include "\Recent"
                    
production flag-extension  = "\"  ATOM  {{ &SemanticActions::systemFlagAtom }}
                    ;  Future expansion. Client implementations
                    ;  MUST accept flag-extension flags. Server
                    ;  implementations MUST NOT generate
                    ;  flag-extension flags except as defined by
                    ;  future standard or standards-track
                    ;  revisions of this specification.
                    
production flag-fetch      = 
					flag
				/	"\Recent"

production flag-keyword    = 
					ATOM		 		{{ &SemanticActions::keywordFlagAtom }}

production body-fld-enc    = 
					string				{{ &SemanticActions::setContentEncoding }}
					/ nil
					; string is restricted to special values
					; ( DQUOTE ( "7BIT" / "8BIT" / "BINARY" / "BASE64"/
                  	; "QUOTED-PRINTABLE" ) DQUOTE ) / string

production body-fld-id     = 
					nstring				{{ &SemanticActions::setContentId }}

production body-fld-lang   = nstring / "(" string km-more-body-fld-lang ")" / epsilon

production km-more-body-fld-lang = 
					SP string km-more-body-fld-lang
				/	epsilon
					
production body-fld-lines  = NUMBER

production body-fld-loc    = nstring

production body-fld-md5    = nstring

production body-fld-octets = 
					NUMBER	 			{{ &SemanticActions::setPartSize }}

production body-fld-param  =
					"(" single-body-fld-param 
						km-more-body-fld-param ")"
						
				/	nil

production single-body-fld-param =
						string 			{{ &SemanticActions::setPartParameterName }}
						SP
						string 			{{ &SemanticActions::setPartParameterValue }}
						
production km-more-body-fld-param = 
					SP single-body-fld-param km-more-body-fld-param
				/	epsilon

production body-type-mpart =
					{{ &SemanticActions::beginPartList }}
					km-one-or-more-bodies 
					{{ &SemanticActions::endPartList }}
					 	SP media-subtype
					 	km-optional-body-ext-mpart

production km-optional-body-ext-mpart = 
					SP body-ext-mpart
				/ 	epsilon
                  
production km-one-or-more-bodies = body km-zero-or-more-bodies

production km-zero-or-more-bodies = 
					body km-zero-or-more-bodies
				/	epsilon
                   
production section         = "[" km-optional-section-spec "]"

production km-optional-section-spec = 
					section-spec
;				/	epsilon

production section-msgtext = 
					"HEADER" {{ &SemanticActions::setHeadersSection }}
				/	"HEADER.FIELDS" {{ &SemanticActions::setHeadersSection }} SP header-list
				/	"HEADER.FIELDS.NOT" SP header-list
				/	"TEXT"
                    ; top-level or MESSAGE/RFC822 part
                    
production section-part =
					 nz-number km-section-sub-part
                    ; body part nesting

production km-section-sub-part = 
					"." nz-number km-section-sub-part
				/	epsilon
                    
production section-spec = 
					section-msgtext
			/		km-section-part-and-text
			
production km-section-part-and-text = 
					section-part km-optional-dot-section-text km-section-part-and-text
				/	epsilon
				
production km-optional-dot-section-text =
					"." section-text
				/	epsilon
			
production section-text = 
					section-msgtext
				/	"MIME"
                 ; text other than actual body part ( headers, etc. )

production media-subtype = string			{{ &SemanticActions::saveMediaSubtype }}
                    ; Defined in [MIME-IMT]

production header-list =
					"(" header-fld-name km-more-header-field-names ")"
					
production km-more-header-field-names =
					SP header-fld-name km-more-header-field-names
				/	epsilon

production header-fld-name =
					astring
					
production astring =
					string
				/	atom-as-string
				; km -- note, the formal definition for astring is a little different
				
production atom-as-string =
					ATOM					{{ &SemanticActions::saveAtomString }}
				/	NUMBER					{{ &SemanticActions::saveAtomString }}
				/	"TEXT"					{{ &SemanticActions::saveAtomString }}				
				/	"FETCH"					{{ &SemanticActions::saveAtomString }}
				/	"FLAGS"					{{ &SemanticActions::saveAtomString }}
				/	"INTERNALDATE"			{{ &SemanticActions::saveAtomString }}
				/	"UID"					{{ &SemanticActions::saveAtomString }}
				/	"NIL"					{{ &SemanticActions::saveAtomString }}
				/	"BODY"					{{ &SemanticActions::saveAtomString }}
				/	"BODYSTRUCTURE"			{{ &SemanticActions::saveAtomString }}
				/	"ENVELOPE"				{{ &SemanticActions::saveAtomString }}
				/	"HEADER"				{{ &SemanticActions::saveAtomString }}

production envelope =
				"(" env-date SP env-subject SP env-from SP
                  env-sender SP env-reply-to SP env-to SP env-cc SP
                  env-bcc SP env-in-reply-to SP env-message-id ")"
                  
production env-bcc =
					km-address-list-or-nil				{{ &SemanticActions::envBccAddressList }}

production env-cc =
					km-address-list-or-nil				{{ &SemanticActions::envCcAddressList }}

production km-address-list-or-nil =
														{{ &SemanticActions::envBeginAddressList }}
					"(" km-one-or-more-address ")"
				/										{{ &SemanticActions::envBeginAddressList }}
					nil

production env-date =
					nstring								{{ &SemanticActions::envDate }}

production env-from =
					km-address-list-or-nil				{{ &SemanticActions::envFromAddressList }}
					
production env-in-reply-to =
					nstring								{{ &SemanticActions::envInReplyTo }}

production env-message-id =
					nstring								{{ &SemanticActions::envMessageId }}

production env-reply-to =
					km-address-list-or-nil				{{ &SemanticActions::envReplyToAddressList }}

production env-sender =
					km-address-list-or-nil				{{ &SemanticActions::envSenderAddressList }}

production env-subject =
					nstring								{{ &SemanticActions::envSubject }}

production env-to =
					km-address-list-or-nil				{{ &SemanticActions::envToAddressList }}

production km-one-or-more-address =
				address km-zero-or-more-address

production km-zero-or-more-address =
				SP address km-zero-or-more-address
			/	address km-zero-or-more-address
			/	epsilon
			
			; The SP seems to be optional.

production address =
				"("
				addr-name 						{{ &SemanticActions::envAddrName }}
				SP addr-adl						{{ &SemanticActions::envAddrAdl }}
				SP addr-mailbox					{{ &SemanticActions::envAddrMailbox }}
				SP addr-host					{{ &SemanticActions::envAddrHost }}
				")"								{{ &SemanticActions::envEndAddress }}
				
production addr-adl =
				nstring
                 ; Holds route from [RFC-2822] route-addr if
                 ; non-NIL
                 
production addr-host =
				nstring
                 ; NIL indicates [RFC-2822] group syntax.
                 ; Otherwise, holds [RFC-2822] domain name

production addr-mailbox = 
				nstring
                 ; NIL indicates end of [RFC-2822] group; if
                 ; non-NIL and addr-host is NIL, holds
                 ; [RFC-2822] group name.
                 ; Otherwise, holds [RFC-2822] local-part
                 ; after removing [RFC-2822] quoting

production addr-name =
				nstring
                    ; If non-NIL, holds phrase from [RFC-2822]
                    ; mailbox after removing [RFC-2822] quoting

production body-type-msg =
				MESSAGE-IN-QUOTES	{{ &SemanticActions::setMimeTypeMessage }}
				SP
				km-message-subtype-more

production km-message-subtype-more =
				RFC822-IN-QUOTES	{{ &SemanticActions::setMimeSubtypeRfc822 }}
				km-body-type-msg-rfc822
				/
				quoted-string		{{ &SemanticActions::setMimeSubtype }}
				SP
				body-fields km-body-ext-1part

production km-body-type-msg-rfc822 =
				SP body-fields
				km-body-type-msg-ext
					
production km-body-type-msg-ext =
					SP km-body-type-msg-ext-gmail / epsilon
					
production km-body-type-msg-ext-gmail =
					km-body-type-msg-ext-rfc822 / body-ext-1part
					
production km-body-type-msg-ext-rfc822 =
					{{ &SemanticActions::beginNestedEmail }}
					envelope SP body SP body-fld-lines
					{{ &SemanticActions::endNestedEmail }}
					km-body-ext-1part
                  
production body-type-text =
				media-text
					SP body-fields SP body-fld-lines km-body-ext-1part

production media-basic     = 
					quoted-string  {{ &SemanticActions::setMimeType }} 
					SP
					quoted-string  {{ &SemanticActions::setMimeSubtype }}

production media-message   = 
					MESSAGE-IN-QUOTES	{{ &SemanticActions::setMimeTypeMessage }}
					SP
					RFC822-IN-QUOTES	{{ &SemanticActions::setMimeSubtypeRfc822 }}
					; DQUOTE "MESSAGE" DQUOTE SP DQUOTE "RFC822" DQUOTE
                    ; Defined in [MIME-IMT]

production media-text =
					TEXT-IN-QUOTES		{{ &SemanticActions::setMimeTypeText }}
					SP
					media-subtype  		{{ &SemanticActions::setMimeSubtype }}
					; DQUOTE "TEXT" DQUOTE SP media-subtype
                    ; Defined in [MIME-IMT]
end
